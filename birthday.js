function userDialog() {
    alert("–ü—Ä–∏–≤—ñ—Ç!");
    const name = prompt("–Ø–∫ —Ç–µ–±–µ –∑–≤–∞—Ç–∏?");
    if (!name) {
        alert("–ú–æ–∂–µ –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ —Ä–∞–∑—É üò¢");
    return;
    }

    const agree = confirm("–•–æ—á–µ—à –ø—ñ–¥–∫–∏–Ω–µ–º–æ —ñ–¥–µ—é –¥–ª—è –ø–æ–¥–∞—Ä—É–Ω–∫–∞?");
    if (agree) {
        alert(`üéÅ ${name}, –æ–±–µ—Ä–∏ —á–∞—à–∫—É –∞–±–æ —à–æ–∫–æ–ª–∞–¥!`);
    } else {
        alert("–ú–æ–∂–µ –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ —Ä–∞–∑—É üò¢");
    }
}

function showDeveloperInfo(surname, name, position = "–†–æ–∑—Ä–æ–±–Ω–∏–∫ —Å–∞–π—Ç—É") {
    const container = document.getElementById("developer-info");
    container.textContent = `–°—Ç–æ—Ä—ñ–Ω–∫—É —Å—Ç–≤–æ—Ä–∏–≤: ${surname} ${name}, ${position}`;
}
showDeveloperInfo("–õ–∏—Ö–æ–ª—ñ—Ç", "–ê–Ω—Ç–æ–Ω");

function compareStrings() {
    const s1 = prompt("–í–≤–µ–¥–∏ –ø–µ—Ä—à–∏–π —Ä—è–¥–æ–∫:");
    const s2 = prompt("–í–≤–µ–¥–∏ –¥—Ä—É–≥–∏–π —Ä—è–¥–æ–∫:");
    if (s1 && s2) {
        alert("–ë—ñ–ª—å—à–∏–π —Ä—è–¥–æ–∫: " + (s1 > s2 ? s1 : s2));
    }
}

function changeBackground() {
    const orig = document.body.style.backgroundColor;
    document.body.style.backgroundColor = "#fff0f0";
    setTimeout(() => {
        document.body.style.backgroundColor = orig || "#dafff6";
    }, 30000);
}

function redirectToOffers() {
    location.href = "offers.html";
}

// DOM
function manipulateDOM() {

    const container = document.getElementById("gift-list-container");
    container.innerHTML = "<p>üÜï –°–ø–∏—Å–æ–∫ –æ–Ω–æ–≤–ª–µ–Ω–æ!</p>";

    const ideaList = document.querySelectorAll("ul li");
        if (ideaList.length > 0) {
            ideaList[0].textContent = "–ï–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞ –∫–Ω–∏–≥–∞";
        }

    // createElement + createTextNode + append
    const block = document.createElement("p");
    const text = document.createTextNode("üéÇ –ù–æ–≤–∏–π –ø–æ–¥–∞—Ä—É–Ω–æ–∫: –¢–æ—Ä—Ç");
    block.appendChild(text);
    container.append(block);

    // outerHTML
    container.append(block.outerHTML);

    // nodeValue
    const nodeNote = document.createTextNode("üéÅ –ü–æ–¥–∞—Ä—É–Ω–æ–∫: —à–æ–∫–æ–ª–∞–¥");
    const nodeContainer = document.createElement("p");
    nodeNote.nodeValue = "üõçÔ∏è –ó–Ω–∏–∂–∫–∞ 20% –Ω–∞ –≤—Å—ñ –ø–æ–¥–∞—Ä—É–Ω–∫–∏";
    nodeContainer.appendChild(nodeNote);
    container.append(nodeContainer);

    // textContent
    const note = document.createElement("p");
    note.textContent = "üìÖ –ê–∫—Ü—ñ—è –¥—ñ—î –¥–æ 30 —á–µ—Ä–≤–Ω—è";
    container.append(note);

    // prepend
    const pre = document.createElement("p");
    pre.textContent = "üö® –£–≤–∞–≥–∞!";
    container.prepend(pre);

    // after
    const afterText = document.createElement("p");
    afterText.textContent = "üîî –ù–µ –ø—Ä–æ“ë–∞–≤!";
    container.after(afterText);

    // replaceWith
    const repl = document.createElement("p");
    repl.textContent = "üåπ –ù–æ–≤–∏–π –ø–æ–¥–∞—Ä—É–Ω–æ–∫: –ö–≤—ñ—Ç–∏";
    setTimeout(() => {
        block.replaceWith(repl);
    }, 6000);

    // remove
    setTimeout(() => {
        repl.remove();
    }, 12000);

}

document.getElementById("start-dialog").addEventListener("click", userDialog);
document.getElementById("change-bg").addEventListener("click", changeBackground);
document.getElementById("redirect").addEventListener("click", redirectToOffers);
document.getElementById("compare-strings").addEventListener("click", compareStrings);

manipulateDOM();
